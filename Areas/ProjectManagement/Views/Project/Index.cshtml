@*  indicates that the view expects a lsit of a project*@
@model List<Project>


@{
    ViewBag.Title = "List Of Projects";
    Layout = "_Layout";

    bool searchPerformed = ViewData["SearchPerformed"] as bool? ?? false;
    string searchString = ViewData["SearchString"] as string;
}

<h2>Projects Listing</h2>

<a asp-action="Create" class="btn btn-primary">Create New Project</a>

@if (Model.Any())
{
    //literation
    <table class="table">
        <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Action</th>
            <th>Description</th>
            <th>Summary</th>
            <th>Action</th>
        </tr>
        </thead>
        
        <tbody>
        @foreach (var project in Model)
        {
            <tr>
                <td>@project.ProjectId</td>
                <td><p>@Html.DisplayFor(model => project.Name, "ProjectName")</p></td>
                <td><p>@Html.DisplayFor(model => project.Description, "ProjectDescription")</p></td>
                
                <td>
                    @await Component.InvokeAsync("ProjectSummary", new { projectId = project.ProjectId})
                </td>
                
                
                <td>
                    <a asp-action="Details" asp-route-id="@project.ProjectId" class="btn btn-info">Details</a>
                    <a asp-action="Edit" asp-route-id="@project.ProjectId" class="btn btn-warning">Edit</a>
                    <a asp-action="Delete" asp-route-id="@project.ProjectId" class="btn btn-danger">Delete</a>
                    

                </td>
            </tr>
        }
            
        </tbody>
        
    </table>
    
    
    
}
else
{
    if (searchPerformed)
    {
        <p>No projects with string were Found </p>
    }
    else
    {
        <p>No projects with string were Found</p>
    }
    
}
